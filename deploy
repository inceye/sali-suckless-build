#!/bin/sh

echo "This script is going to install several suckless utilities and write their files to your .config directory. 
If you have directories .local/src/surf, .local/src/dmenu, .local/src/dwm etc. they will be gone.
You can only run this script as a user, never as root -- otherwize the script is going to fail.
Do you wish to proceed? [Y/n] 
WARNING: DO NOT END THIS SCRIPT BY PRESSING CTRL+C AS YOUR icanon SETTINGS WILL BE ALTERED. ONLY EXIT BY PRESSING n" 

# Prep w icanon
saved_tty_settings=$(stty -g)
stty -icanon min 1 time 0

# Main loop
while true
do
	stty -icanon min 1 time 0
	input=$(head -c 1) 
	echo ""

	# Confirm case
	case $input in
		[yY])
			echo "Are you sure you wish to install the tools?"
			echo "If you have any configuration in your .local/src for these tools already it will be wiped"
			echo "Type YES (uppercase) if you wish to proceed"
			input=$(head -c 3) 
			if [ "$input" != "YES" ]
			then
				continue
			fi

			echo ""

			# Make src and share dirs
			mkdir -p ~/.local/src/
			mkdir -p ~/.local/share/
			mkdir -p ~/.local/bin/

			# Remove old dirs
			echo "Removing old configuration from .local"
			rm -Rf .local/src/tabbed
			rm -Rf .local/src/surf
			rm -Rf .local/src/st
			rm -Rf .local/src/dwm
			rm -Rf .local/src/dwmblocks
			rm -Rf .local/src/dmenu
			rm -Rf .local/src/slock

			# Install upower
			sudo pacman -S upower

			# DwmBlocks
			echo "First, we have to configure your dwmblocks"
			dwmblocks_config="$(cat dwmblocks_defconf)"

			# volume
			echo "Do you want volume to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/VOLUME/{\"🔊\", \"pamixer --get-volume-human\",	5,	10},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/VOLUME/\/\/{\"🔊\", \"pamixer --get-volume-human\",	5,	10},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# layout
			echo "Do you want layout to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						pacaur -S xkblayout-state-git
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/KEYBOARD/{\"🎹\", \"xkblayout-state print '%n'\",	1,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/KEYBOARD/\/\/{\"🎹\", \"xkblayout-state print '%n'\",	1,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# ram
			echo "Do you want RAM to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/RAM/{\"💾\", \"free -h | awk '\/^Mem\/ { print \$3\\\\\"\/\\\\\"\$2 }' | sed s\/i\/\/g\",	10,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/RAM/\/\/{\"💾\", \"free -h | awk '\/^Mem\/ { print \$3\\\\\"\/\\\\\"\$2 }' | sed s\/i\/\/g\",	10,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# cpu temp
			echo "Do you want your CPU temperature to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/CPUTEMP/{\"🌡\", \"cputemp\",	5,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/CPUTEMP/\/\/{\"🌡\", \"cputemp\",	5,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# gpu temp
			echo "Do you want your GPU temperature to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/GPUTEMP/{\"🌡\", \"gputemp\",	5,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/GPUTEMP/\/\/{\"🌡\", \"gputemp\",	5,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# disk space
			echo "Do you want your available disk space to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						stty "$saved_tty_settings"
						echo "Making several records for disks, quitting on empty label"
						echo "Enter the disk label to display in status(if empty -- the script will stop adding disks and will go to the next step)"
						echo "REMEMBER TO FOLLOW SED ESCAPINGS (eg. \\/home)"
						read -r label
						while [ "$label" != "" ]
						do
							echo "Enter the path to the disk"
							echo "REMEMBER TO FOLLOW SED ESCAPINGS (eg. \\/home)"
							read -r path
							dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/DISK/{\"📁$label\", \"df -h \\\\\"$path\\\\\" | grep \\\\\"$path\\\\\" | awk '{print \$4}'\",	10,	0},\n\tDISK/")
							echo "Enter the disk label to display in status(if empty -- the script will stop adding disks and will go to the next step)"
							echo "REMEMBER THAT YOU NEED TO ESCAPE EACH / SYMBOL (eg. \\/home)"
							read -r label
						done
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/DISK//")
						stty -icanon min 1 time 0
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/DISK/\/\/{\"📁\/\", \"df -h \/ | grep \/ | awk '{print \$4}'\",	10,	0},\n\t/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# battery
			echo "Do you want battery charge to be in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						stty "$saved_tty_settings"
						echo "Making several records for batteries, quitting on empty line number" 
						echo "List of available batteries:"
						upower -e | grep "" -n
						echo "Enter the number of the line, containing the battery you want to be displayed(if empty, then stop adding batteries and go to the next step)"
						read -r line_number
						while [ "$line_number" != "" ]
						do
							echo "Enter the battery label you want to be displayed"
							echo "REMEMBER TO FOLLOW SED ESCAPINGS (eg. \\/home)"
							read -r label
							path=$(upower -e | head -"$line_number" | tail -1 | sed "s/\//\\\\\//g")
							dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/BATTERY/{\"\", \"batstat $path $label\",	10,		0},\n\tBATTERY/")
							echo "List of available batteries:"
							upower -e | grep "" -n
							echo "Enter the number of the line, containing the battery you want to be displayed(if empty, then stop adding batteries and go to the next step)"
							read -r line_number
						done
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/BATTERY//")
						stty -icanon min 1 time 0
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/BATTERY/\/\/{\"\", \"batstat PATH LABEL\",	10,		0},\n\t/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# date
			echo "Do you want the date displayed in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/DATE/{\"📅\", \"date '+%Y-%m-%d(%a)'\",	5,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/DATE/\/\/{\"📅\", \"date '+%Y-%m-%d(%a)'\",	5,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			# time
			echo "Do you want the time displayed in your dwmblocks [Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/TIME/{\"⌚\", \"date '+%I:%M:%S%p'\",	1,	0},/")
						break
						;;
					[nN])
						dwmblocks_config=$(echo "$dwmblocks_config" | sed "s/TIME/\/\/{\"⌚\", \"date '+%I:%M:%S%p'\",	1,	0},/")
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			echo "$dwmblocks_config"
			echo "Is this correct?[Y/n]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						continue=""
						break
						;;
					[nN])
						continue="no"
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			[ "$continue" = "" ] &&

			echo "$dwmblocks_config" > dwmblocks/config.h &&

			# Install libxft-bgra for the emojis not to crash dwmblocks

			echo "Proceeding to install the dependencies" &&

			# Import gpg key to authorize libxft-bgra
			gpg --keyserver pool.sks-keyservers.net --recv-key CFDF148828C642A7 &&

			stty "$saved_tty_settings" &&
			git clone https://aur.archlinux.org/libxft-bgra.git &&
			cd libxft-bgra &&
			makepkg -si &&
			cd .. &&
			rm -Rf libxft-bgra &&
			stty -icanon min 1 time 0 &&

			echo "Suckless tools' installation is initiated" &&

			# Install the suckless software

			# dwm
			cd dwm &&
			sudo make install &&
			cd .. &&
			cp -r dwm ~/.local/src/ &&

			# dmenu
			cd dmenu &&
			sudo make install &&
			cd .. &&
			cp -r dmenu ~/.local/src/ &&

			# st
			cd st &&
			sudo make install &&
			cd .. &&
			cp -r st ~/.local/src/ &&

			# dwmblocks
			cd dwmblocks &&
			sudo make install &&
			cd .. &&
			cp -r dwmblocks ~/.local/src/ &&

			# slock
			cd slock &&
			sudo make install &&
			cd .. &&
			cp -r slock ~/.local/src/ &&

			# surf
			pacaur -S gst-plugins-good gst-libav &&
			cd surf &&
			sudo make install &&
			cd .. &&
			cp -r surf ~/.local/src/ &&

			# tabbed
			cd tabbed &&
			sudo make install &&
			cd .. &&
			cp -r tabbed ~/.local/src/ &&

			# scripts
			cp scripts/bin/* ~/.local/bin/ &&
			cp scripts/share/* ~/.local/share/ &&

			#xinitrc
			cp .xinitrc ~/.xinitrc &&

			# Add ~/.local/bin to the PATH variable
			export PATH="$PATH:$HOME/.local/bin"

			echo "Installation was successfully completed" &&
			break ||

			# If encountered error 
			echo "There was an ERROR while installing some of the utilities."
			echo "Do you want to remove possibly broken configurations from .local?[Y/N]"
			while true
			do 
				input=$(head -c 1)
				echo ""
				case $input in 
					[yY])
						echo "Removing wrong configuration from .local"
						rm -Rf .local/src/tabbed
						rm -Rf .local/src/surf
						rm -Rf .local/src/st
						rm -Rf .local/src/dwm
						rm -Rf .local/src/dwmblocks
						rm -Rf .local/src/dmenu
						rm -Rf .local/src/slock
						break
						;;
					[nN])
						break
						;;
					*)
						echo "Invalid input"
						;;
				esac
			done

			echo "Try Again?[Y/n]"
			;;
		[nN])
			stty "$saved_tty_settings"
			echo "Aborting"
			break
			;;
		*)
			echo "Invalid input, try again"
			;;
	esac
done


# Icanon settings
echo "Restoring original icanon tty settings"
stty "$saved_tty_settings"
